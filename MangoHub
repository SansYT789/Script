-- =================================
-- ðŸŸ£ MangoHub - Full Fix v1.1 Demo (ESP Pets + Eggs, no lag)
-- =================================

--// Load WindUI
local WindUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/Footagesus/WindUI/main/dist/main.lua"))()

--// Global vars
getgenv().AntiAFK_Mode = "auto"
getgenv().AntiAFK_Enabled = false
getgenv().AntiAFK_Connection = nil
getgenv().ESP_Enabled = false

--// Window
local Window = WindUI:CreateWindow({
    Title = "MangoHub",
    Author = "Made By Group Vinreach",
    Folder = "Mango",
    Size = UDim2.fromOffset(450, 400),
    Theme = "Dark"
})

--// Sections
local MainSection = Window:Section({ Title = "Main Features", Opened = true })
local SettingsSection = Window:Section({ Title = "Settings", Opened = true })
local MiscSection = Window:Section({ Title = "Misc", Opened = true })

--// Tabs
local MainTab = MainSection:Tab({ Title = "Main", Icon = "house" })
local AutoTab = MainSection:Tab({ Title = "Automatic", Icon = "mouse-pointer-click" })
local ConfigTab = SettingsSection:Tab({ Title = "Configuration", Icon = "settings" })
local MiscTab = MiscSection:Tab({ Title = "ESP Pets", Icon = "eye" })

local ws = game.Workspace
local plr = game.Players.LocalPlayer
local playerGui = plr:WaitForChild("PlayerGui")
local uiFrame = playerGui:WaitForChild("ScreenGui"):WaitForChild("UiPet")
local namePetLabel = uiFrame:WaitForChild("NamePet")
local nameEggLabel = uiFrame:WaitForChild("NameEgg")

-- =========================
-- Main Tab
-- =========================
MainTab:Paragraph({
    Title = "MangoHub Version",
    Desc = "Version: 1.1 Demo",
    Color = Color3.fromHex("#00ffcc")
})

MainTab:Paragraph({
    Title = "Join Discord",
    Desc = "discord.com/speedhub",
    Color = Color3.fromHex("#7289da")
})

MainTab:Toggle({
    Title = "Enable Anti AFK",
    Desc = "Turn Anti AFK on or off",
    Value = false,
    Callback = function(state)
        getgenv().AntiAFK_Enabled = state
        if state then
            if getgenv().AntiAFK_Connection then getgenv().AntiAFK_Connection:Disconnect() end
            local vu = game:GetService("VirtualUser")
            getgenv().AntiAFK_Connection = plr.Idled:Connect(function()
                if getgenv().AntiAFK_Mode == "auto" then
                    vu:CaptureController()
                    vu:ClickButton2(Vector2.new())
                elseif getgenv().AntiAFK_Mode == "jump" then
                    local char = plr.Character
                    if char and char:FindFirstChild("Humanoid") then
                        char.Humanoid.Jump = true
                    end
                end
            end)
            WindUI:Notify({Title="Anti AFK",Content="Enabled successfully!",Duration=3})
        else
            if getgenv().AntiAFK_Connection then getgenv().AntiAFK_Connection:Disconnect() end
            WindUI:Notify({Title="Anti AFK",Content="Disabled!",Duration=3})
        end
    end
})

-- =========================
-- Automatic Tab
-- =========================
AutoTab:Paragraph({Title = "Automatic Mode", Desc = "Choose how the Anti AFK works", Color = Color3.fromHex("#ffaa00")})

AutoTab:Dropdown({
    Title = "Anti AFK Mode",
    Desc = "Select AFK method",
    Values = {"auto","jump"},
    Callback = function(val)
        getgenv().AntiAFK_Mode = val
        WindUI:Notify({Title="Anti AFK Mode",Content="Changed to: "..val,Duration=3})
    end
})

AutoTab:Button({
    Title = "Demo Button",
    Desc = "Test demo functionality",
    Callback = function()
        WindUI:Notify({Title="Demo",Content="Demo mode active!",Duration=3})
    end
})

-- =========================
-- Config Tab
-- =========================
ConfigTab:Paragraph({Title = "Configuration", Desc = "Save or Delete UI config", Color = Color3.fromHex("#00aaff")})

ConfigTab:Button({
    Title = "Save Config",
    Desc = "Save all UI settings",
    Callback = function()
        WindUI:SaveConfig()
        WindUI:Notify({Title="Config",Content="Saved successfully!",Duration=3})
    end
})

ConfigTab:Button({
    Title = "Delete Config",
    Desc = "Delete saved UI config",
    Callback = function()
        WindUI:DeleteConfig()
        WindUI:Notify({Title="Config",Content="Deleted successfully!",Duration=3})
    end
})

-- =========================
-- Misc Tab (ESP Pets + Eggs Multi)
-- =========================
MiscTab:Toggle({
    Title = "ESP Pets",
    Desc = "Highlight all pets and eggs using UI",
    Value = false,
    Callback = function(state)
        getgenv().ESP_Enabled = state
        if not state then
            namePetLabel.Text = ""
            nameEggLabel.Text = ""
        end
    end
})

-- =========================
-- Helper Functions
-- =========================
local petMap = {}
local eggMap = {}

local function getRealPetName(egg)
    local val = egg:FindFirstChild("PetName")
    if val and val:IsA("StringValue") then
        return val.Value
    end
    return "Unknown"
end

local function applyEggESP(egg, name)
    if not eggMap[egg] then
        eggMap[egg] = true
    end
    return name
end

local function applyPetESP(pet)
    if not petMap[pet] then
        petMap[pet] = true
    end
    return pet.Name
end

-- =========================
-- Update ESP every 0.5s (lightweight)
-- =========================
task.spawn(function()
    while true do
        if getgenv().ESP_Enabled then
            -- Pets
            local pets = {}
            for _, obj in pairs(ws:GetDescendants()) do
                if obj:IsA("Model") and obj:FindFirstChild("Humanoid") and string.find(obj.Name:lower(),"pet") then
                    table.insert(pets, obj)
                end
            end
            if #pets > 0 then
                local t = {}
                for _, pet in ipairs(pets) do
                    table.insert(t, applyPetESP(pet))
                end
                namePetLabel.Text = table.concat(t," | ")
            else
                namePetLabel.Text = ""
            end

            -- Eggs
            local eggs = {}
            for _, obj in pairs(ws:GetDescendants()) do
                if obj:IsA("Model") and obj:FindFirstChild("PetName") then
                    table.insert(eggs, obj)
                end
            end
            if #eggs > 0 then
                local t = {}
                for _, egg in ipairs(eggs) do
                    table.insert(t, applyEggESP(egg, getRealPetName(egg)))
                end
                nameEggLabel.Text = table.concat(t," | ")
            else
                nameEggLabel.Text = ""
            end
        end
        task.wait(0.5)
    end
end)